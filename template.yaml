AWSTemplateFormatVersion: 2010-09-09
Description: >-
  lottery-api

Transform:
- AWS::Serverless-2016-10-31

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 30
    MemorySize: 128
    Architectures:
      - "x86_64"

Resources:
  ## LAMBDA RESOURCES
  # ADMIN LAMBDAS
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/admin/get-all-items.getAllItemsHandler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LotteryWinnersTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref LotteryWinnersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /admin/users
            Method: GET

  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/admin/get-by-id.getByIdHandler
      Policies:
        # should keep to Least Responsibility Principle
        - DynamoDBCrudPolicy:
            TableName: !Ref LotteryWinnersTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref LotteryWinnersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /admin/users/{id}
            Method: GET

  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/admin/put-item.putItemHandler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LotteryWinnersTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref LotteryWinnersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /admin/users/{id}
            Method: PATCH

  # USER LAMBDAS
  registerUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/user/user-registration.userRegistrationHandler
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:SignUp
              Resource:
                !Sub arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${LotteryPlayersUserPool}
      Environment:
        Variables:
          LOTTERY_PLAYERS_USER_POOL: !Ref LotteryPlayersUserPool
          COGNITO_CLIENT_ID: !Ref LotteryPlayersUserPoolClient
      Events:
        Api:
          Type: Api
          Properties:
            Path: /auth/signup
            Method: POST

  # TABLE TO HOLD LOTTERY WINNERS
  # Simple syntax to create a DynamoDB table with a single attribute primary key, more in
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlesssimpletable
  LotteryWinnersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  # COGNITO RESOURCES
  LotteryPlayersUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: LotteryPlayers
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireUppercase: true
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false

  LotteryPlayersUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref LotteryPlayersUserPool
      GenerateSecret: false

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
